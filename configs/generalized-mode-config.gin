# TalkToModel Configuration - Generalized Mode
# 
# This configuration enables the new generalized tool-augmented agent system
# instead of the traditional hardcoded action mappings.
#
# BENEFITS OF GENERALIZED MODE:
# ✅ Automatically adapts to any dataset structure  
# ✅ Reduces hardcoded rules and mappings
# ✅ Uses dynamic pandas/sklearn code generation
# ✅ More flexible and extensible
# ✅ Better error handling with automatic fallbacks
#
# TO USE THIS CONFIG:
# 1. Set OPENAI_API_KEY environment variable
# 2. Run: python flask_app_gpt4.py --gin_file=configs/generalized-mode-config.gin

# =============================================================================
# GENERALIZED MODE CONFIGURATION
# =============================================================================

# Enable generalized tool-augmented agents (EXPERIMENTAL)
EnhancedExplainBot.use_generalized_actions = True

# AutoGen Multi-Agent Settings
EnhancedExplainBot.openai_api_key = None       # Uses OPENAI_API_KEY env var
EnhancedExplainBot.gpt_model = "gpt-4o"        # Model for all agents
EnhancedExplainBot.preload_explanations = False  # Faster startup

# Dataset Configuration (diabetes example)
EnhancedExplainBot.model_file_path = "data/diabetes_model_logistic_regression.pkl"
EnhancedExplainBot.dataset_file_path = "data/diabetes_test.csv"
EnhancedExplainBot.background_dataset_file_path = "data/diabetes_train.csv"
EnhancedExplainBot.dataset_index_column = 0
EnhancedExplainBot.target_variable_name = "Outcome"
EnhancedExplainBot.remove_underscores = True
EnhancedExplainBot.name = "GeneralizedDiabetesBot"

# Feature definitions (automatically discovered in generalized mode)
EnhancedExplainBot.categorical_features = []
EnhancedExplainBot.numerical_features = [
    "Pregnancies", "Glucose", "BloodPressure", "SkinThickness", 
    "Insulin", "BMI", "DiabetesPedigreeFunction", "Age"
]

# Feature descriptions (optional - helps with explanations)
EnhancedExplainBot.feature_definitions = {
    "Pregnancies": "Number of times pregnant",
    "Glucose": "Plasma glucose concentration (mg/dL)",
    "BloodPressure": "Diastolic blood pressure (mm Hg)", 
    "SkinThickness": "Triceps skin fold thickness (mm)",
    "Insulin": "2-Hour serum insulin (mu U/ml)",
    "BMI": "Body mass index (weight in kg/(height in m)^2)",
    "DiabetesPedigreeFunction": "Diabetes pedigree function (genetic risk)",
    "Age": "Age in years"
}

# =============================================================================
# COMPARISON: TRADITIONAL MODE CONFIG
# =============================================================================
# To switch back to traditional hardcoded actions, use:
# EnhancedExplainBot.use_generalized_actions = False
#
# Traditional mode is more tested but less flexible:
# ✅ Well-tested for diabetes prediction
# ✅ Fast execution for known patterns  
# ❌ Hardcoded action mappings
# ❌ Brittle parsing logic
# ❌ Domain-specific rules
# ❌ Difficult to extend to new datasets

# =============================================================================
# ADVANCED SETTINGS (Optional)
# =============================================================================

# Logging verbosity (for debugging)
# Set to DEBUG to see detailed agent reasoning
import logging
logging.basicConfig(level=logging.INFO)

# Random seed for reproducibility
EnhancedExplainBot.seed = 42 